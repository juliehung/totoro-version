name: "Combine web and server"

on:
    workflow_call:
        inputs:
            milestone:
                required: true
                type: string
        secrets:
            HIS_GCP_PROJECT_ID:
                required: true
            HIS_GCP_SERVICE_KEY:
                required: true
env:
    VERSION_REPOSITORY: dentallio/totoro-version

jobs:
    Combine-Web-And-Server:
        runs-on: ubuntu-18.04
        container: openjdk:8-jdk-stretch
        steps:
            - name: "Install Tool"
              run: apt-get update -y && apt-get install unzip jq -y
            - name: "Set up Cloud SDK"
              uses: google-github-actions/setup-gcloud@master
              with:
                  project_id: ${{ secrets.HIS_GCP_PROJECT_ID }}
                  service_account_key: ${{ secrets.HIS_GCP_SERVICE_KEY }}
                  export_default_credentials: true
            - name: "Download latest web zip of current milestone from google storage"
              run: gsutil ls -l gs://totoro-admin-build/${{ inputs.milestone }}/web | sed '$d' | tail -n 1 | awk '{ print $3 }' | xargs -I {} gsutil cp {} .
            - name: "Download latest war of current milestone from google storage"
              run: gsutil ls -l gs://totoro-admin-build/${{ inputs.milestone }}/server | sed '$d' | tail -n 1 | awk '{ print $3 }' | xargs -I {} gsutil cp {} .
            - name: "Check file is downloaded"
              run: ls -a
            - name: "Create combination version file"
              run: |
                  ls *.war && \
                  ls *.zip && \
                  echo -n 'version=${{ inputs.milestone }}-' >> totoro.properties && \
                  ls *.war | awk '{ gsub(/.war/, "", $1); split($1, a, "-"); n=split(a[3], b, "."); printf "s%d.", b[n]; }' >> totoro.properties && \
                  ls *.zip | awk '{ gsub(/.zip/, "", $1); split($1, a, "-"); n=split(a[2], b, "."); printf "w%d", b[n]; }' >> totoro.properties && \
                  cat totoro.properties
            - name: "Unzip web and Rename to WEB-INFO "
              run: |
                mkdir -p WEB-INFO/classes/public && \
                ls *zip | xargs unzip -d WEB-INFO/classes/public
            - name: "Move totoro properties into WEB-INFO/classes"
              run: mv totoro.properties WEB-INFO/classes
            - name: "Add web to war file"
              run: ls *.war | xargs -I {} jar uf {} ./WEB-INFO
            - name: "Rename war file"
              run: mv *.war totoro-`cat totoro.properties | awk '{ split($1 , a, "="); print a[2] }'`.war && ls
            - name: "Push download war to bucket in milestone*/final"
              run: ls *.war | xargs -I {} gsutil {} gs://totoro-admin-build/${{ inputs.milestone }}/final
            - name: "Update version"
              run: |
                  echo -n {} > tmp && \
                  jq \
                  --arg serverFileName $(ls *.war) \
                  --arg webFileName $(ls *.zip) \
                  --arg finalFileName $(cat totoro.properties | awk '{ split($1 , a, "="); print a[2] }') \
                  --arg timestamp `date "+%Y-%m-%dT%H:%M:%SZ"`\
                  '.history + [{"serverFileName": $serverFileName, "webFileName": $webFileName, "finalFileName": $finalFileName, "timestamp": $timestamp}]' \
                  tmp > tmp2 &&
                  cat tmp2
            - name: "Overwrite history version"
              run: |
                  gsutil cp tmp2 gs://totoro-admin-build/${{ inputs.milestone }}/final/records.json
