name: "Push with tag"

on:
    push:
        tags:
            - '[0-9]+.[0-9]+.[0-9]+'
jobs:
    Run-Test:
        uses: dentallio/totoro-admin/.github/workflows/run-test.yml@release

    Props:
        runs-on: ubuntu-18.04
        if: ${{ startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/') }}
        outputs:
            tag-name: ${{ steps.setup-props-value.outputs.tag-name }}
            tag-timestamp: ${{ steps.setup-props-value.outputs.tag-timestamp }}
            war-name: ${{ steps.setup-props-value.outputs.war-name }}
            version-file: ${{ steps.setup-props-value.outputs.version-file }}
            deploy-port: ${{ steps.setup-props-value.outputs.deploy-port }}
            notify: ${{ steps.setup-props-value.outputs.notify }}
            dev-deploy: ${{ steps.setup-props-value.outputs.dev-deploy }}
            gcp-release: ${{ steps.setup-props-value.outputs.gcp-release }}
            firebase-release: ${{ steps.setup-props-value.outputs.firebase-release }}
            run-nhi-rule-test: ${{ steps.setup-props-value.outputs.run-nhi-rule-test }}
            milestone: ${{ steps.setup-props-value.outputs.milestone }}
        steps:
            -   name: "Check out totoro admin"
                uses: actions/checkout@v2
            -   name: "Setup Props Value"
                id: setup-props-value
                run: ${GITHUB_WORKSPACE}/.github/workflows/scripts/setup-props-value.sh
                shell: bash
                env:
                    GITHUB_REF: ${{ github.ref }}
                    GITHUB_SHA: ${{ github.sha }}

    Build-War:
        runs-on: ubuntu-18.04
        container: openjdk:8-jdk-stretch
        needs: [ Props ]
        if: ${{ startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/') }}
        env:
            WAR_NAME: ${{ needs.Props.outputs.war-name }}
            TAG_NAME: ${{ needs.Props.outputs.tag-name }}
            VERSION_FILE: ${{ needs.Props.outputs.version-file }}
        steps:
            -   name: "Install Tool"
                run: |
                    apt-get update -y && apt-get install jq curl unzip git -y
                    apt-get update && apt-get install -y --no-install-recommends --allow-unauthenticated gcc make libpng-dev
            -   name: "Check out totoro admin"
                uses: actions/checkout@v1
            -   uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-
            -   name: "Grant execute permission for gradlew"
                run: chmod +x gradlew
            -   name: "Build"
                run: |
                    ./gradlew bootWar -Pprod -x check --no-daemon
                    ls ${GITHUB_WORKSPACE}/build/libs/
            -   name: "Set up Cloud SDK"
                uses: google-github-actions/setup-gcloud@master
                with:
                    project_id: ${{ secrets.HIS_GCP_PROJECT_ID }}
                    service_account_key: ${{ secrets.HIS_GCP_SERVICE_KEY }}
                    export_default_credentials: true
            -   name: "Upload war to google storage"
                run: gsutil cp ${GITHUB_WORKSPACE}/build/libs/${{ env.WAR_NAME }} gs://totoro-admin-build/${{ needs.Props.outputs.milestone }}/server/${{ github.ref_name }}.war

    Combine:
        needs: [ Build-War, Props ]
        uses: dentallio/totoro-version/.github/workflows/combine-web-and-server.yml@master
        with:
            milestone: ${{ needs.Props.outputs.milestone }}
            hisGcpRegistry: totoro-admin
        secrets:
            hisGcpProjectId: ${{ secrets.HIS_GCP_PROJECT_ID }}
            hisGcpServiceKey: ${{ secrets.HIS_GCP_SERVICE_KEY }}
            totoroVersionToken: ${{ secrets.TOTORO_VERSION_ACCESS }}
            totoroAdminToken: ${{ secrets.TOTORO_ADMIN_TOKEN }}

    Upload-Final:
        needs: [ Combine, Props ]
        uses: dentallio/totoro-version/.github/workflows/copy-file-to-remote-machine.yml@master
        with:
            remoteHost: dev.dentall.site
            remoteUser: dentallio
            remotePath: /home/dentallio/Dentall/dora-monitor/storage/wars
            googleStoragePath: totoro-admin-build/${{ needs.Props.outputs.milestone }}/final/
            googleStorageFileName: ${{ needs.Combine.outputs.finalFileName }}
        secrets:
            remoteMachineToken: ${{ secrets.HIS_LOCAL_DEV_MACHINE_KEY }}
            hisGcpProjectId: ${{ secrets.HIS_GCP_PROJECT_ID }}
            hisGcpServiceKey: ${{ secrets.HIS_GCP_SERVICE_KEY }}

    Notify:
        needs: [ Combine, Upload-Final ]
        uses: dentallio/totoro-version/.github/workflows/send-slack-notification.yml@master
        with:
            content: "${{ needs.Combine.outputs.finalFileName }} is released now. <!here>"
        secrets:
            slackQaChannelHook: ${{ secrets.SLACK_QA_CHANNEL_HOOK }}

    NotifyWhenFail:
        needs: [ Run-Test, Props, Build-War, Combine, Upload-Final ]
        if: ${{ failure() }}
        uses: dentallio/totoro-version/.github/workflows/send-slack-notification.yml@master
        with:
            content: "Fail to release totoro admin running on totoro-admin workflow action. <!here>"
        secrets:
            slackQaChannelHook: ${{ secrets.SLACK_QA_CHANNEL_HOOK }}
