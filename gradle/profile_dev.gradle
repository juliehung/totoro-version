import org.gradle.internal.os.OperatingSystem

apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'

dependencies {
    compile "org.springframework.boot:spring-boot-devtools"
    compile "com.h2database:h2"
}

def profiles = 'dev'
if (project.hasProperty('no-liquibase')) {
    profiles += ',no-liquibase'
}
if (project.hasProperty('tls')) {
    profiles += ',tls'
}

bootRun {
    args = []
}

task copyIntoStatic (type: Copy) {
    from 'build/www/'
    into 'build/resources/main/static'
}

processResources {
    filesMatching('**/application.yml') {
        filter {
            it.replace('#project.version#', version)
        }
        filter {
            it.replace('#spring.profiles.active#', profiles)
        }
    }
}

copyIntoStatic.dependsOn processResources
bootJar.dependsOn copyIntoStatic

yarn_install.onlyIf { shouldWebpackRun() == true }

def shouldWebpackRun() {
    file('build/www/app/main.bundle.js').exists() == false || project.hasProperty('webpack')
}

if (project.hasProperty('4fe')) {
    task webpack(type: NpmTask, dependsOn: 'npm_install') {
        args = ["run", "webpack:prod"]
    }

    war {
        webAppDirName = 'build/www/'
    }
    
    processResources.dependsOn webpack
} else {
    task webpackBuildDev(type: NpmTask, dependsOn: 'npm_install') {
        onlyIf { shouldWebpackRun() == true }
        args = ["run", "webpack:build"]
    }

    war {
        webAppDirName = 'src/main/webapp/'
    }

    processResources.dependsOn webpackBuildDev
}
